THE SINGLETON PATTERN

1. RESTRICTS THE INSTANTATION OF A CLASS - TO A SINGLE OBJECT (kinda like a object literal does)
2. Srcs for this documentation
      - http://addyosmani.com/resources/essentialjsdesignpatterns/book/#singletonpatternjavascript
      - http://www.adobe.com/devnet/html5/articles/javascript-design-patterns-pt1-singleton-composite-facade.html
      -THIS TALKS ABOUT IT BEING BAD PRACTICE - unless - CONTEXT BASED
      -http://joelhooks.com/blog/2013/05/01/when-is-a-singleton-not-a-singleton/

var mySingleton = (function () {
      
      // Instance stores a reference to the Singleton 
      var instance; 
      
      // 
      
      function init() {
      
      // the Singleton 
      
      //Private methods and variables
      function privateMethod() {
        console.log("I am private");
      }
      
      var privateVariable = "I am also private";
      
      var privateRandomNumber = Math.random();
      
      return {
      
      // Public methods and variables
      publicMethod: function () {
        console.log("The public can see me!"); 
      },
      
      publicProperty:"I am also public", 
      
      getRandomNumber: function () {
        return privateRandomNumber;
      }
      
      };
      
    };
    
    return {
      // Get the Singleton instance if one exists
      // or create one if it doesn't
      
      getInstance: function () {
        if ( !instance ) {
          instance = init();
        }
        
        return instance
      }
    };
      

})();
